---
import { SEO } from 'astro-seo'

import '../styles/global.scss' // import global before other css

import Header from '@components/Header.astro'
import Footer from '@components/Footer.astro'

import { metaData, generalTitle } from 'src/config'
import { addSlashToEndIfMissing, getCurrentLanguage } from 'src/utils'
import Announcement from '@components/Announcement.astro'
// import Announcement from '@components/Announcement.astro'

export type Props = {
  title: string
  description: string
  cover?: ImageMetadata | undefined
}

const { title, description, cover } = Astro.props as Props

const canonicalURL = addSlashToEndIfMissing(
  new URL(Astro.url.pathname, Astro.site).toString()
)

const lang = getCurrentLanguage(Astro.url.pathname)

const translatedMetaData = metaData[lang]

const openGraph = {
  basic: {
    title: `${title} • ${translatedMetaData.name} • ${translatedMetaData.description}`,
    type: 'webpage',
    url: canonicalURL,
    image: cover?.src ?? 'https://injoi.com/assets/injoi-bestell-app.png',
  },
  optional: { description },
  image: {
    type: 'image/png',
    width: 1200,
    height: 630,
    alt: `${translatedMetaData.name}, ${translatedMetaData.description}`,
  },
}

const production = import.meta.env.CONTEXT === 'production'
---
<html lang={lang} class="font-sans">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="/assets/font/font.css" />
    <link
      rel="icon"
      href="/favicon.svg"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    
     { !production && (
        <script async src="https://www.googletagmanager.com/gtag/js?id=G-R4QT9R47LR">
        </script>
        <script is:inline>
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());

          gtag('config', 'G-R4QT9R47LR');
        </script>
      )
    }
    <SEO
      title={`${title} • ${generalTitle(translatedMetaData)}`}
      description={description}
      canonical={canonicalURL}
      openGraph={openGraph}
      twitter={{ card: 'summary_large_image' }}
    />
  </head>

  <body>
    <Header />
    <Announcement>
      {lang === 'de' ? 
      (<p>Payflink heisst jetzt <b>injoi!</b></p>) 
      : lang === 'fr' ?
      (<p>Payflink s'appelle maitenant <b>injoi!</b></p>)
      :
      <p>Payflink is now <b>injoi!</b></p>}
    </Announcement>
    <main>
      <slot />
      {
        !production && (
          <div class="center">
            <button id="editButton">Editable</button>
            {/* prettier-ignore */}
            <script is:inline>
              const editButton = document.querySelector('#editButton') 
              if (editButton) {
                editButton.addEventListener('click', () => {
                  document.querySelector('main').contentEditable = 'true'
                })
              }
            </script>
          </div>
        )
      }
    </main>
    <Footer />

    <style>
      body {
        max-width: 100%;
        overflow-x: hidden;
        display: grid;
        grid-template-rows: auto 1fr auto;
        grid-template-areas:
          'Header'
          'Announcement'
          'Content'
          'Footer';
        min-height: 100vh;
        background: var(--background-color);
        color: var(--text-color);
        font-style: normal;
        font-weight: normal;
        line-height: 1.5;
        margin: 0;
        padding: 0;
        font-size: 100%;
      }
      main {
        grid-area: Content;
      }
    </style>
  </body>
</html>
