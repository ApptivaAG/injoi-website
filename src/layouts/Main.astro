---
import { SEO } from 'astro-seo'

import '../styles/global.scss' // import global before other css

import Header from '@components/Header.astro'
import Footer from '@components/Footer.astro'

import { metaData, generalTitle } from 'src/config'
import { addSlashToEndIfMissing, mkIsCurrentPage } from 'src/utils'

export type Props = {
  title: string
  description: string
  image?: string
}

const { title, description, image } = Astro.props as Props

const canonicalURL = addSlashToEndIfMissing(
  new URL(Astro.url.pathname, Astro.site).toString()
)

const isCurrentPage = mkIsCurrentPage(Astro.url.pathname)
const lang = isCurrentPage('/de/') ? 'de' : 'en'

const translatedMetaData = metaData[lang]

const openGraph = {
  basic: {
    title: `${title} • ${translatedMetaData.name} • ${translatedMetaData.description}`,
    type: 'webpage',
    url: canonicalURL,
    image: image ?? 'https://gastonsolution.com/gaston-bestell-app.png',
  },
  optional: { description },
  image: {
    type: 'image/png',
    width: 1070,
    height: 630,
    alt: `${translatedMetaData.name}, ${translatedMetaData.description}`,
  },
}

const production = import.meta.env.CONTEXT === 'production'
---

<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="/assets/fonts/font.css" />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/apple-touch-icon.png?v=2"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicon-32x32.png?v=2"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicon-16x16.png?v=2"
    />
    <link rel="manifest" href="/site.webmanifest?v=2" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg?v=2" color="#08aec7" />
    <link rel="shortcut icon" href="/favicon.ico?v=2" />
    <meta name="msapplication-TileColor" content="#ffc40d" />
    <meta name="theme-color" content="#08aec7" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    {
      lang === 'de' && production && (
        <script
          id="chatbot"
          data-server="https://pierre.gastonsolution.com/webclient"
          defer
          src="https://pierre.gastonsolution.com/webclient/embed/bundle.js"
        />
      )
    }
    {
      production && (
        <script
          defer
          data-domain="gastonsolution.com"
          src="https://plausible.io/js/plausible.js"
        />
      )
    }

    <SEO
      title={`${title} • ${generalTitle(translatedMetaData)}`}
      description={description}
      canonical={canonicalURL}
      openGraph={openGraph}
      twitter={{ card: 'summary_large_image' }}
    />
  </head>

  <body>
    <Header />
    <main>
      <slot />
      {
        !production && (
          <div class="center">
            <button id="editButton">Editable</button>
            {/* prettier-ignore */}
            <script is:inline>
              const editButton = document.querySelector('#editButton') 
              if (editButton) {
                editButton.addEventListener('click', () => {
                  document.querySelector('main').contentEditable = 'true'
                })
              }
            </script>
          </div>
        )
      }
    </main>
    <Footer />

    <style>
      body {
        max-width: 100%;
        overflow-x: hidden;
      }
      main {
        grid-area: Content;
      }
    </style>
  </body>
</html>
