---
type Testimonial = {
  name: string
  avatar: 'male' | 'female'
  statement: string
  restaurant: string
}
const testimonials: Testimonial[] = [
  {
    name: 'Lara',
    avatar: 'female',
    statement: 'Geht sehr schnell und ist übersichtlich.',
    restaurant: 'Seehaus',
  },
  {
    name: 'Tom',
    avatar: 'male',
    statement: 'Bequem und ohne Stress auswählen.',
    restaurant: 'Habsburg',
  },
  {
    name: 'Peter',
    avatar: 'male',
    statement:
      'Schnell und einfach. Einige Beschreibungen zum Essen wären aber noch gut.',
    restaurant: 'Franz',
  },
  {
    name: 'Nina',
    avatar: 'female',
    statement: 'Wir haben Zeit um die Karte zu studieren.',
    restaurant: 'Sugoi Sushi',
  },
  {
    name: 'Jenny',
    avatar: 'female',
    statement: 'Sehr einfach, man muss nicht auf die Bedienung warten.',
    restaurant: 'Seehaus',
  },
  {
    name: 'Marco',
    avatar: 'male',
    statement:
      'Super das man gleich zahlen kann, dann kann man gehen wann man will.',
    restaurant: 'El-Mosquito',
  },
  {
    name: 'Petra',
    avatar: 'female',
    statement: 'Bargeldlos zahlen. 😍',
    restaurant: 'Seehaus',
  },
  {
    name: 'Reto',
    avatar: 'male',
    statement: 'Einfach und unkompliziert. ✌🏼',
    restaurant: 'Sugoi Sushi',
  },
  {
    name: 'Kate',
    avatar: 'female',
    statement:
      'Super Idee, sehr einfach und schnell. Bilder in der Karte wären noch top.',
    restaurant: 'El-Mosquito',
  },
  {
    name: 'Charlie',
    avatar: 'male',
    statement: 'Ich kann Extrawünsche einfacher [...] äussern.',
    restaurant: 'Habsburg',
  },
  {
    name: 'Julia',
    avatar: 'female',
    statement: 'Unkompliziert und man kan einfach bestellen wenn man will. 😊',
    restaurant: 'Seehaus',
  },
  {
    name: 'Xavier',
    avatar: 'male',
    statement: 'Trinkgeldoptionen zu spärlich.',
    restaurant: 'Habsburg',
  },
  {
    name: 'Hanna',
    avatar: 'female',
    statement:
      'Praktisch, aber cooler Kontakt zu den Angestellten ist auch nett. 😁',
    restaurant: 'Franz',
  },
  {
    name: 'Dani',
    avatar: 'male',
    statement:
      'Ist sehr langsam und mühsam! Vor allem wenn man angetrunken ist. 🤣',
    restaurant: 'Habsburg',
  },
]
---

<div class="wrapper">
  <div class="marquee">
    <ul>
      {
        testimonials.map(({ name, avatar, statement, restaurant }) => (
          <li>
            <img
              src={`/assets/${avatar}-avatar.svg`}
              alt={avatar === 'female' ? 'Frau' : 'Mann'}
            />
            <p class="statement">{statement}</p>
            <p class="details">
              <b>{name}</b> im Restaurant <b>{restaurant}</b>
            </p>
          </li>
        ))
      }
    </ul>
    <ul style="translate: 100%; position: absolute; inset: 0;">
      {
        testimonials.map(({ name, avatar, statement, restaurant }) => (
          <li>
            <img
              src={`/assets/${avatar}-avatar.svg`}
              alt={avatar === 'female' ? 'Frau' : 'Mann'}
            />
            <p class="statement">{statement}</p>
            <p class="details">
              <b>{name}</b> im Restaurant <b>{restaurant}</b>
            </p>
          </li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  .wrapper {
    overflow: hidden;
    width: 100vw;
    max-width: 100%;
  }
  .marquee {
    width: 270rem;
    margin-block: 2rem 4rem;
    position: relative;
  }

  ul {
    display: flex;
    justify-content: space-around;
    padding: 0 0 0 1em;
    margin: 0;
    list-style: none;
    gap: 1em;
    animation: slide 50s linear infinite;
  }

  @keyframes slide {
    0% {
      transform: translate(0%);
    }

    100% {
      transform: translate(-100%);
    }
  }

  li {
    display: grid;
    grid-template:
      'avatar statement' 1fr
      'avatar details' auto
      / auto 1fr;
    gap: 0.2em 1em;
    width: 100%;
    padding: 0.5em 1em;
    background-color: var(--primary-color);
    border: 2px solid var(--primary-color);
    border-radius: 0.5em;
    --text-color: white;
  }

  @media (min-width: 768px) {
    li {
      max-width: 18em;
    }
  }

  li p {
    font-size: 0.8em;
    margin-block: 0;
    color: var(--text-color);
  }

  ul img {
    grid-area: avatar;
    width: 2.5rem;
    aspect-ratio: 1;
    padding-top: 0.2em;
    margin-top: 0.1em;
    border: 2px solid white;
    border-radius: 50%;
  }

  .statement {
    grid-area: statement;
  }

  li .details {
    grid-area: details;
    font-size: 0.7em;
  }
</style>
