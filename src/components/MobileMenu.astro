---
import { globalNavigation, metaData } from 'src/config'
import { getCurrentLanguage, mkIsCurrentPage } from '../utils'
import type { NavigationTree } from "src/config";
import MobileMenuGroup from "./MobileMenuGroup.astro";

export type Props = {
  navigation: NavigationTree
}

const lang = getCurrentLanguage(Astro.url.pathname)
const isCurrentPage = mkIsCurrentPage(Astro.url.pathname)
const langPage = `/${lang}/`

const navigation = globalNavigation[lang]
const data = metaData[lang]
---

<script>
  window.addEventListener('load', function () {
    let observer = new IntersectionObserver((entries) => {
      if (entries[0].boundingClientRect.y < -1) {
        document.body.classList.add('scrolled-down')
      } else {
        document.body.classList.remove('scrolled-down')
      }
    })
    observer.observe(document.querySelector('#top-of-site-pixel-anchor'))
  })
</script>

<nav>
  <a href={'/de/'} aria-current={isCurrentPage('/de/', {exact: true})}>{isCurrentPage('/de/') ? 'Startseite' :
    'Home'}</a>
  {navigation.map((item) => 'items' in item ?
  <MobileMenuGroup {...item} /> : <a href={item.href} aria-current={isCurrentPage(item.href)}>{item.title}</a>)}

  <footer>
    <p>
      <a href="/de/" aria-current={isCurrentPage('/de/')}> de </a>
      &emsp;
      <a href="/fr/" aria-current={isCurrentPage('/fr/')}> fr </a>
      &emsp;
      <a href="/en/" aria-current={isCurrentPage('/en/')}> en </a>
    </p>
  </footer>
</nav>

<style lang="scss">
  nav {
    font-size: 1.2em;
    display: flex;
    flex-direction: column;
    padding-top: 2em;
    height: 100%;
    gap: 1.5em;
    text-align: center;

    a {
      text-decoration: none;


      &[aria-current] {
        color: var(--background-color);
      }
    }

    footer {
      margin-top: auto;

      p :not([aria-current]) {
        font-weight: 100;
      }
    }
  }
</style>