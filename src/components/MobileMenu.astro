---
import type { NavigationTree } from "src/config";
import { mkIsCurrentPage } from "src/utils";
import MobileMenuGroup from "./MobileMenuGroup.astro";

export type Props = {
  navigation: NavigationTree
}

const { navigation } = Astro.props as Props;
const isCurrentPage = mkIsCurrentPage(Astro.url.pathname)
---

<nav>
  <!-- <a href={'/de/'} aria-current={isCurrentPage('/de/', {exact: true})}>{isCurrentPage('/de/') ? 'Startseite' :
    'Home'}</a> -->
  {navigation.map((item) => 'items' in item ?
  <MobileMenuGroup {...item} /> : <a href={item.href} aria-current={isCurrentPage(item.href)}>{item.title}</a>)}

  <footer>
    <p>
      <a href="/de/" aria-current={isCurrentPage('/de/')}> <img
        src="/assets/Flag_of_Germany.svg"
        class="flag-germany"
        alt="Flag Germany"
        width="32"
        height="32"
      /></a>
      &emsp;
      <a href="/fr/" aria-current={isCurrentPage('/fr/')}> <img
        src="/assets/Flag_of_French.svg"
        class="flag-french"
        alt="Flag French"
        width="32"
        height="32"
      /></a>
      &emsp;
      <a href="/en/" aria-current={isCurrentPage('/en/')}> <img
        src="/assets/Flag_of_England.svg"
        class="flag-england"
        alt="Flag England"
        width="32"
        height="32"
      /></a>
    </p>
  </footer>
</nav>

<style lang="scss">
  nav {
    font-size: 1.2em;
    display: flex;
    flex-direction: column;
    padding-top: 2em;
    height: 100%;
    gap: 1.5em;
    text-align: center;

    a {
      text-decoration: none;


      &[aria-current] {
        color: var(--background-color);
      }
    }

    footer {
      margin-top: auto;

      p :not([aria-current]) {
        font-weight: 100;
      }
    }
  }
</style>